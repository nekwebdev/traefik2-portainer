version: "3.8"
services:
  # MariaDB - Database
  nextcloud_db:
    container_name: nextcloud_db
    hostname: nextcloud_db
    image: mariadb:10.9
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${CONFIG_HOME}/nextcloud_db:/var/lib/mysql
    command: --transaction-isolation=READ-COMMITTED --log-bin=msqyld-bin --binlog-format=ROW
    labels:
      - "com.centurylinklabs.watchtower.enable=true" # label to enable watchtower
    networks:
      - nextcloud # use an internal network for the nextcloud services
    environment:
      - TZ
      - MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
  # Redis
  nextcloud_redis:
    container_name: nextcloud_redis
    hostname: nextcloud_redis
    image: redis:6.2-alpine
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${CONFIG_HOME}/nextcloud_redis:/data
    labels:
      - "com.centurylinklabs.watchtower.enable=true" # label to enable watchtower
    networks:
      - nextcloud # use an internal network for the nextcloud services
    environment:
      - TZ
  # Nextcloud - Cloud storage and services
  nextcloud:
    depends_on:
      - nextcloud_db
      - nextcloud_redis
    container_name: nextcloud
    hostname: nextcloud
    image: nextcloud:23
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${CONFIG_HOME}/nextcloud:/var/www/html
      - ${DATA_HOME}:/var/www/html/data # cloud data storage directory
    labels:
      - "com.centurylinklabs.watchtower.enable=true" # label to enable watchtower
      # Traefik config
      - "traefik.enable=true"
      # router
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      - "traefik.http.routers.nextcloud.rule=Host(`${SUBDOMAIN}.${DOMAINNAME}`)"
      - "traefik.http.routers.nextcloud.entrypoints=web-secure"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.routers.nextcloud.tls.certresolver=tlschallenge"
      - "traefik.http.routers.nextcloud.middlewares=chainOauth@file, nextcloudRedirectDav@docker, nextcloudRedirectWebfinger@docker"
      - "traefik.http.routers.nextcloud.service=nextcloud"
      # middlewares
      - "traefik.http.middlewares.nextcloudRedirectDav.replacepathregex.regex=^/.well-known/ca(l|rd)dav"
      - "traefik.http.middlewares.nextcloudRedirectDav.replacepathregex.replacement=/remote.php/dav/"
      - "traefik.http.middlewares.nextcloudRedirectWebfinger.replacepathregex.regex=^(/.well-known.*)"
      - "traefik.http.middlewares.nextcloudRedirectWebfinger.replacepathregex.replacement=/index.php$${1}"
    networks:
      - nextcloud # Use an internal network for the nextcloud services
      - traefik-servicenet
    environment:
      - TZ
      - REDIS_HOST=nextcloud_redis
      - MYSQL_HOST=nextcloud_db:3306
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
      - NEXTCLOUD_TRUSTED_DOMAIN=${SUBDOMAIN}.${DOMAINNAME}
      - TRUSTED_PROXIES
      - OVERWRITEPROTOCOL=https
      # - NEXTCLOUD_ADMIN_USER
      # - NEXTCLOUD_ADMIN_PASSWORD
networks:
  # Internal facing network for Nextcloud Docker containers
  nextcloud:
    name: nextcloud
    driver: bridge
  ### Add to define external network to connect with Traefik
  traefik-servicenet:
    name: traefik-servicenet